%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 121 197 455 308 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: IsConcaveCorner.eps
%%CreationDate: Sat Nov 15 14:52:58 2008
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 14.0.0.653
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ComicSansMS
%!FontType1-1.0: ComicSansMS 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ComicSansMS def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 115 /s putdup 107 /k putdup 101 /e putdup 108 /l putdup 80 /P putdup 116 /t putdup 98 /b putdup 99 /c putdup 46 /period putdup 112 /p putdup 76 /L putdup 102 /f putdup 69 /E putdup 110 /n putdup 100 /d putdup 111 /o putdup 105 /i putdup 82 /R putdup 103 /g putdup 104 /h putdup 67 /C putdup 97 /a putdup 118 /v putdup 32 /space putdup 114 /r putdup 58 /colon putdup 109 /m putdup 120 /x putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B18C5645B2C1D0B264D6E8DE584653A0E936B121B619B661390348CB7A5ABB133A03A6483F2B43F32450916
B0164D61F4AAD1593C609C443C69225D1ABB3D67D8BB1926F46103F6E3F3E592D80128018A6DF53210DA078D7A034832F49FFA0A719A6F275B73475D31839C7D
690DF158FC53A9D56D709CA30BBB6F25E0D386733B7EC8FAFDC6A03F3270A384B86DCBCE8E3D8D53C5F5FD6D5DB4DA8E7D51EC042E32385664896D1AC197E6C6
F63056D3EC27D545B2268B009078B0B61F2B8DA566979BE421F696310C7D75BB67F2EBB9B8E4EC02D359E07B4137A5F7F55F69AF702D79C171B14F330135F684
2369B8516F4651BBDE8CF5C9144B6AA22835A22B6EDBD6A38F9259D808285A334BF5569FC9D4F00E9A8464A60EC6C19443073B9628EF3B457FD7042BA42DC8B1
449EC4B81AB511C2042B9481ECC56DA38B17A9DA375F8A877D4ED51B4C63AE6E85C9E66416FD741FD85409EBA0230600CF0DC3A6D76ADA622A26C983574CF3EC
3D75B66286EE91B77F323DCED374B2DF5D41A5A38AD8308364942857591E6ADBF2677FEAA8DFC3EDA6FC3AA147C310EE5404F808B3F2A544330F4B4F5A02E9B1
0A17026614296CDFD9D461DCAE1A8F1350A6C42482C6B3ED9538765C578F31D2318CE3D5902D563CC08C80C1D43B6A3E1381759748E644817BA4CF8112C60A6A
B656A60B8CF2DD1BF79215C87D83EBB43263310208A6CA3339EB276CF69BDE1804865F7E2AEB27AF4F1986E3FB5D7FC8B911759DBC5369771BD3C21E63C252F1
69EF44B8DA37AD4AA7B9316C46C56229E8FB49A70F3841BE4A949FAB26E1349024AC5BD79808C7C78536B0A2B6B20A1EF1FF6A529C486FF14575EDBF19221F26
EB99A657C0AF0C9BFF963DB77F65F8C8B7CBD1902DC5178F6E167483EF94793EFFD33DE0296E14DD8BE1645319A49DEDCD58FCEAFD136522AC2504AB3D300BAE
BB4DC08ABC4E5B6FCE16F8503F71BFFB76B00A9BAB4811FA68BC5D7B9AA7F0EC82C7D36B1BAC3B1BA2C2770A33359B7DFF8B3C2B8298373099B0DA2AB56D7130
603615A32914FF4AFBCA0FACC8F389E4FB85C8E0D2DD753FDB560750EF614748C5A4E83D20232D018D3DE5F453575B433B7DC71E65F1BBC7B1CE5E1CE5C34ECB
4B5ACCFAAB6B8E051EF7539D8D940ED676FDB5B7871BABFFCD9DFFB529E5520BF27649D6CCAAA370E660AAFBBF78AB0ADBB0B95D13CDE7A27AAB282A2AD9B770
149F7CDDFB0A58385F3C69B0E00FEE8A7C3270A08398A29874360FA9878FF47396B519B7CEB2AA80154E5CACCABE291E40666C811600DD32C30C158C6C8EAFB8
D8303C32DD50B0EDD37EC9922EBFB0A560B5C71E07C52B2B14E4E985465763F7D3DA4D58B3493C31E77F3192ED104D4AE99F84EEB82F2AC940232CCCC3E82F58
CC2C7D0F83E42DF8736A87B39491069C3DB3A60C91D31608638C0669099B4D5B98E34EDFD641F927A4CF59E9BDFAEAB0ABADAC9154D770441B34413F52224950
881375613025B02AE4A0C60AD829383199576918F2B121F910254C6BCCBBD2BA58BB019121763489DFC0DB05CF3ADE8C969685FD15D58F947D86FFF0E02B0CC1
A8B0C17B272F52F4BCBBF953B2C5535308FE427EC5C12DF12350AD86731BB92DD511951979B660923F9F5763BE891434F76642E597A567BD1E095039C439F848
4ECC4D8AD4CAA16A7E523C603F31BFC87BC6937A2D41D9837EF9168C73AC9EB8103C92E66906D461E3202D78A2BE216A0DAF23BF0A5FC7724204B68D6A05CEFF
49FFF655160A6AD3B7290B5C675F8E9D7E239FB6231984912C1ED95C53A0347A0E3F3636734A6B30A72D21A02A1BB7F9B0FC5CD574FFE7BEF4029D69E4D19A84
6560F75BB3A00483E5ABE0BD2044717B567AC5240E89D71934610F8869E73756C3C766A00156DA13067C0C0B028A0075860B272F3E1243FDE08987BF20D5C68B
B8BC080D0973D5CECD28FD0E4A3923495A4E62C2729CB17E0C2A2C8E42DA8FE8308C9A4786AE70DBFFB6958155E979C90700F2D58617592BE788A8ADE38D735E
A4834084FC4BF7AA9D621C066643C88231180A62959BECBF7300E77BEB4B089EF1D9F05B891AE5B01E1053F7FE43336CE03F348C804C5B332B48BB973309E138
EEFA7AF64DD0138B60124359A864A683046FAA02B03F5A0B9175F698FF2B3873448E219307C664757486505F0A8085E17A3331092A3B6F124C08D943F93EEFD4
8CB2F13F0654904E17839A91CF243D5E9830B9E5076FB07FFBCBA4D9178F17235BA5D17A9AE760E5F05E723B52E8A17ECF1498DAB6F3D48E314988DC2D75CD96
D2F9456E141C9A697E064866E4FE53CF6E0F07A194DE896C4103A7C9FA344AAE3FDA0E20F8AA55B836C26EE52597B83C7355FD6EAE33223F328D5E99B81A72FA
F4C645692FB014E2F25A0BBB70E9A9FE5127F8F71C5DAA3AFD6F145D932FB995C2C0162BD02A908E736B80268ECB12A548F9F46172D17CFD3FC70B8D0CB304E8
87CBB13296442050B302B4FA4BE3A4555AA66ED7F2FEB416246CC74750B4C4E908302EED4D3B628E39BDC40E219CED950E585A27BECA489A9225E68CFE06B1AC
8547639D8727CE2E0607BB067144B6B3F294792582E66722E16BC48C60D67F662FD70E3C97DFED1020D038E53EDA7DC6CE3855FC4DFF56443E58810A50114AEB
E46E5704ABEB8C5E2B692E6FF1788990514ACAEED9CEB2F438473B2026FAEBD85CF0CF12AC6BA44B5C676AE877C85EE06BC712BD50E5F2B646D46241B2ABE6FA
B8733E3146171AF427313DBB999B2F52690D3F87D57B246B8067EA1A324C11DFDB1003DDE003E86D1E0B9B0DEB5A0C4C038941DDF50BAC9B5512873BDB2CDAB0
87F494C443D557EF1095E0166D3FE40DA117E6DB80DB56E29A323D30DC2A469F72D273D2612E3B6628EC6A753049953FD96164E1C54874C5A2486756519A4847
274D82251EBD63AFAC9AB607360E4A0DD782098C8585CF3B406979B5BF7D0977F8447FB57606744429B94A79011D459384CBE1E21C94264FA52EE558A193DDB3
ACE0159B9625E62CC111E975166720EB481745AA77105D9CC87160F793BF7980EA5BE4625276F789771E0303461A379D7F90081E283A6F62B4B466ECDF32E44B
F5AF7CE38DD8685A0F9F21397FE6154B2670574BED65D9F8329E404D2C3B0A419D762D0B61394F20CE5944CB28F8D7023E0B9C6BE3682DBD938EF6F6989CF677
A3C08EEF0E3E8CE3944D0DB6BEC497B4A9847D13A092832F5AD1E709AF33D88A2E01240DF60A095C6AD0E8BA15716CBA527AA1140881A7D0F2C9C4832C283065
890A56A6CE1A858402260C85953C72EB6294C3667DBDF7D88F8E682463E6C58CB0DCDD469D6EE6E59A70C26291C61DB9D182E0EC6F049AD9C33A7A28773317CE
67AF7479459094FA47ED3F567DBBB3D5AC32C27FB880BBB6264F22E35C2C41B41BF24A7B1D1C57AEFFAD6288B0BBF805A81B5CAC0F8EF0EA7BF14F4D615025E7
ACCF668B876CCEFA833D5591DCA84D1C8BE0356DAA33718FD90216545756300DCDA38549518C4192845EA1F69609D0BA4DD4A2E04F7019D975E6AE0F3B20B00F
06E729F7B2EB41A8BF515111478351FFC43FD4E81582A8FAEB56C27197A6198AA91112EB221D6B3EE2F7F5022E78F1655ACD0798F6BF311A229EB0A6C3F53B77
B786DE07C12DE7EF47A4CC7F7FD064BA7721CFE7D180DC9CF67D7DCBDD48EEF7F48FC7B1AF4D12AC9278C3212AD6906EC314E59F9524C0118AD7EA28732C4709
8D898168B6FE335508A3DE635E8148A15E7B25A6D46D688E238D403B8DC3856DCA92AFBBE764EF8CCD83CE2147205B6A223D1A1EB590882221AF3B8956639CE3
131C0CFC06B764AE743CE825CF3B4E03B535E232B39A25DC835B8B9B4DA678D574DD3056BAE22AE9759A8BCF35BAC8065EB6F8361C467924C32D10FE13D94A4F
5709CC66EA83C851E662A6F80A97621F0E44E77821BAF4E980F8F0EEE7253E734319D27999E4FE699D58297B10C9335F5BD9970F13442F39C35A287A3E4B495E
C5F5A3E61F4685C6CF4FCB9F74DF1C770482EA3A6FE056D0D2FC02849FBF4BCF61FC2B4814C1367ACE55074429519F2816D6FCD7826EF6C6D45511C9A3B7E66B
79C18CE568CBA1C334250874BB3EEA479C63BD8FEB6CC8EE7ACBE7D730491E70F3BC8536A6FB787CC0DB65A09FA8CE94CA6D433E12A7DEC64E2F1BD1925F2F72
CCE9949EB89ADA06E0223893F0FCEB4D269ACBB599C0FB309A119DE1608C47A30F81D5F24C7C6362298A4ED26CF863D582AE2B1B8C86A14FB8EF8B4472951CA2
3087EA0969A6E06DDB2547C1AA04C928CFA0059381CC9401D517F1114FBF165B894941CCB7B49B3B952601DD83525D1FAE12C6EB764A1B26DF7451707B9DC0A4
485784CCF6AD00121B9B96EC8B83CBF484AE862E5ED22BC1DE2C01DE1CF7E96327434DB43F7EF92B2E210D0884E3BAB977B057655D931A21F2C4E40B24D4AE01
CF5D4267F3629149432FB26B5FF285C1F65DA9AF324AB187DFFCF55AFED5541480453E87766644DB5855687B959005EF1ADED19CA893845619844915E89397A9
6BB7E9083FB611E5E490F587FBFEB38658901D6AD20D4F872AE7E2F45799D1DD83068EBB6D20D96A2A79E400797932617060F9F00D6F14DD107B19F88E6604EA
D1F12D676ADEA55E6E4B3DF833A240CFB27909A442A439314A4547E14ABF8FFADD43BA9A1672F5D733EF2C124D09CAAA6DE00EE63D9774625039A9A53D5550B7
574427838099F01752481AB846EDF970B765B4FB649378F84178C439FF71FF85983BF7589083C709D24C5B83DC56A8DB8BD491BEE6E6ACD8EE80B8B2281E87DC
6EFF850BA6CB3ECFFF8634A3E7FAE5FC44EE16690A668833C907D0EA70B2FAA4F63501856EA8A4EE155BD27F6DABF5BC442B3A2E33590B8E8DDF389FF3050ED9
93910D508087DC81DD96819BBEC082AFF52387B2D80F47F3E54671AB47405966B5478921620694BC67ED75BB4F5A13475FFA6008C23E7B7EA619A57C71CF6C60
E13DA6A8A48F9165C7B734F6BF63B9D78103FDD8E2D590A5851333BB6665C0E54217AD43A311C838C9BBC483D1006B1581BA777308A4B0CCEB728BC57CD6F856
22B416DFB45E7A8615B2E71675034CE5826713B3CAC892BCCEEEB86AB2EEF26F7F4870E0E20C8FDFC51CBA693EE5DF91AA45984DBC092537843D4A3F7C6915F2
46CC41DAADA62CF9443DE49F83BF21ACEE4F5769E047919655135D52D11E88954BB7CAAD85AFAAACE63422FB8031813D88DE3A2F5FF5AF112BF62DC9A16B7FEE
B8B5BDAF8F476CE65D2DDC82DD334A448B7BB230469A91A5A5CFEA9E65091F8336A9124E2FA6D0F6442DD55B3BDBE2B25EC40653CE452F64E5B828E8F86BE5AC
687C2500E3CE6C9818CAE83AF5ABCD3A62769ED98CE623C2F470F03BB8C91ACAA47BF1D87876324C4FAD7E895FAA83A3B09648445F4E4D74DA5DB910288B58D0
943EAA59D9E8EFA41147BD472E55CD3AB8A3A80DA55F3BE7E8ADC895D93639558B39623BD0E6B7F4AC723048C909342D54D73005B59F85F253C960060C101616
56A557A061ED7127DDF80087065936A698516745EEFCFF4D46AF2BEC2D69E246974E4DD95EC59D6AFCCAD7EEAA59AB1F99746835C226CCA74C1CB39954661ED3
35CBB0DC2CEF16CE45554E65536A6D3D2B7CC6428224F4BBA3E8567CE3CBB4181637C214A5188E83C079DA4BDA2FFA922B5B9C0CDD3C897028C4737FEF50B574
4A44C8B1903BE472111051A0DD0DDC43FE12F7DF3530267E99AA72CB127620CF06F2848F0E85D036E79A064B6AB99E1787E6469FB6F88D7DA34A5063135D603B
E700ED050EF58D185C89EDC67981399257167E746431BFE1C8415CDED88BA2384C8AB5592742DA79795B505F424DE8058E2975D390C4FD13A25C4874164692AB
947A86987FAD987626E1CA6ADA4B2B266E10AA7E0153AC50DBEAD9719DF8014DCC6E7A9DFFAAE94F330F3E31E986E629A1DE82E7CFCD4D78BFEF0322DC02E45C
F32EF538C128309C9955F08B5DE536665D946A9ACEB28E1829D52E56B7B8ECA266D622F8F7EC52D58C7B3090AA05329B167B56A09E335637FF1ED8EF7AB4AB38
C84B9438C2D555FC9FA85FAEF27D5CA1E228296638D1124BBED1CA45FFE14A0DFB7429897FBE1362097BBA2D3F53FB3C5C68648B345BC2A5762FE7737D3EC4CC
7107306BC7AC0467CB3798778B25EBCE745DC86576476FE53CB878AC6598C309E983D2B13715F5B7D8FE2B38A0F5CD630E4F124CB7506622799A6DFF81B20778
CA7BBB6B2F3C81FCF477E535EE3BA08B06D31B0A0D0DEF5F7059DC21EF0D21E4AB6DEA9D793B1F09D472CFA87757406F9976B85D297A0A634D8FE6B5D8D48DBF
C464F50F3F46A9247F35F78ACADA403A1E5DCD70D140A001391BE5D18EC963FA6DE7FD2BFA62BE41A85B84ADA51527F46E8B426855D7E93F9C42DA99D2084674
BBEB4B3822824395B2032ED07370BD9E772A3CF4E11BF7075F0109C70253946B4F4EF2746A550F9A34E3ADBE8A22DCB2401329F7752772DCA1FAA10C6DFAAD7C
6126A53E70579894D24F3124DDE6E47C462D03FF4F6B84511FF6264426E3D67E697E325637F3B375C87D39656B423401D449A825061FEFC03822DFB006FEC34D
328AC4B9770E16BEDB2880B152ACEE51BF1AFC6DA2E60BD324A1C98831EAC248771E2377BFD92FE4962CB200718E128956B51B013E29FD3C74A905AC09986703
1DCF2AEDDEF7EF77FC8E335FB3766A8FAC0E322E96B219AF202291EA5A8A564CC878EFAE262CA5700187B2A70FC523A8DDED9867EC0C5510F895FF059811FC8D
4A8664E93F264B4E788B0B26434DC1070970DB8FBB41692DEEA4D64D0E7477542ABBE280464FDE4E2052988EDB8C33599C5A2F6B18B50AA19060B8041250062B
5D37DF0CDB27A9F88E56EE2D22DDD5D72416F3BAA9D28F1CE04D6482DD8E6EEBF3DDE8EBB6548CBA672EF2B64F81B42C209B6C380F595DFA78969092D9FC3368
28F0940DB5ACEEC082880406381C3B41FEECA726687124BDFDFC3AFC5763668887A1C5CD6AC78D65D050D00AC6A1F9783F42C32A78613290B13AD861B3A88019
6BA17B90EAC83AF595EFD3B306CB6D503440ECC1C468B3125267D93D9622A424F9EBD5226794C073B231072E05054450A91168C128546CA0A9E763099E816C36
8A03275CF1BE74BA2E542A30F7DCB6F25D5FD138A6F28DD1792F06BB2A0C40C85B062CD2A6B263F18DE8D4AA1F9FCF6921582FCE9725A099813EA0B14A2D92A9
CF664D8C06BDB5AFB7F9780DA3B87CCCC4A9289A14B6777A6A5F0FCCE3546DA2B0751F07D2EE2F204BB5F49B9AB2E96D7A06E57CA5E33AC8C2DE5A13F9E33E8C
E5723272C0F3B8794543EAC35593D8D97705722F524D6F0AEA8E36CA2AC1BECE8E69E57338E69A8894317B7AE636E2EE1DD1E7E9E35DEEE3EC7B321C47BD4626
F5AB772B2C4CDC2E4BF6580256A77A74194280D23FE5A7C6CE58C6BD42DE3AC9DFB18FD0E3BDBD28367A8C0E10E3F760E576ADE9BE24B8595F04767D0BEA1ACF
0AEAF463A0F565EFA1AB6A4E278F6A96EF9F0E4621C5F397F4A413BF61D9E9DEAD583EFCBB35EA57EC7230969E0644FCD18E9C721F59DDA1041492E9E29EAEC6
8E1F113D9875364BDC86D64DD006D1ADF80DCB081F496CAEA1D8CA0B88BA8F195A20BB68177E77D2D2EC631BFBEAC5E730F660E3E2FD8778DACE504E7D6BE778
FE17F9499218681603B2B5922675E6BFB470929B9BB303CDBD7049B3B1CB1BFBDEBCBB15CBC167403D80C7EAE2014EF74E5473F1B3023C4638F69BA6F45D63BA
38DFA5E88810F8728925C4D2290D2B9EB411B4C6032AB09AE93DEC5608F0126C9C08E84D5FF5CC81C6A8B8E559F5354AFFDE249D98FD716723270BDE9D7BE14D
99811108323F41B4D1E9F0E458ABF13EF21BBB0D4C6440F3A0D393E1ACD7565A39F052BE0C5676520BC028260A4F5423F2A918E22078153126C64899F5BDEC73
F6FD600D81B1ED6B11B5C2BBE3546CC5E2C0BBB31238862CE2061F5B11EB046E4443E83ED172DE47FFA701B85794E283F39FC9E499A7AA8D5FE4A4DE5DC3F3D2
E49148ABC82CA94AF2C9CBB24559F4AB845B868038709F9AB0DFC890191B5A097496C30BAB88AEF508C461BB4D82A0047E172EAAF3CA8C1725E791FD256B5973
CA0398C35E483E090F28F658868DAF7B8049483C2A6ABA4BB992938A6E8B00F5CFB6858D92B8DFB9A5E8FC0085E5876AA8AFB3A6550E1D3ABB91FC7F719CC4E1
7093
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 299 
238 424 843 693 820 654 388 366 366 530 481 277 417 249 512 610 
450 610 610 610 610 610 610 610 610 299 299 381 510 381 524 931 
732 630 603 722 625 607 680 768 546 665 611 551 883 797 798 521 
877 629 693 680 737 650 1040 724 635 693 377 550 377 581 627 556 
512 593 514 587 548 508 531 578 280 403 540 274 777 524 526 535 
520 481 487 471 520 486 684 590 521 538 366 421 366 598 500 610 
500 299 427 412 675 597 597 556 1241 693 381 1194 500 693 500 500 
180 180 394 394 387 441 883 556 883 403 381 897 500 538 635 299 
238 623 794 612 636 404 635 556 795 527 578 481 417 795 627 409 
481 651 651 556 520 694 249 556 651 449 578 651 651 651 524 732 
732 732 732 732 732 1087 603 625 625 625 625 546 546 546 546 722 
797 798 798 798 798 798 481 798 737 737 737 737 635 521 443 512 
512 512 512 512 512 912 514 548 548 548 548 280 280 280 280 509 
524 526 526 526 526 526 481 526 520 520 520 520 521 535 431 ]
CorelDrawReencodeVect /_R13014111-ComicSansMS /ComicSansMS Z

%%BeginResource: font ComicSansMS
%!FontType1-1.0: ComicSansMS 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ComicSansMS def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /quoteright putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B18D54F9E0F0F9280A6425EED2E2B7BB29DA8D3D977AE0F4D887F72309ABE6CB09B8D1F5600469945BCCCD7
B2D101FE2041568F0CE69BC5385039532D780E8D26810666D3F165EC98D470F0327786BDD443ABFB273E71BAB3CF2C206C7672EF1A60E9DEF6DECB0B811F25FF
31D047521D4965F6E0D2F43803D97AB4A8740F8FDB0B3E93F5D1171CD1C5177BC63B4DFDFCE731A2FC804D7875B292AEF9EFB9CA02B0B0B50CBEF861276004D9
E2B7FF463EFFEDF832B51656834824FF88DCA182B90284B2D5CBFED36B4E24576296950D7C445675886E64B3EC77679FDB489AFB1A826EEE0AE398C3D0F02672
2324F4BF8315B6531F18B27DCBA82CEF2055A5B93F6F44DA00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
/CorelDrawReencodeVect-ComicSansMS [16#21/quoteright ] def
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 299 
180 424 843 693 820 654 388 366 366 530 481 277 417 249 512 610 
450 610 610 610 610 610 610 610 610 299 299 381 510 381 524 931 
732 630 603 722 625 607 680 768 546 665 611 551 883 797 798 521 
877 629 693 680 737 650 1040 724 635 693 377 550 377 581 627 556 
512 593 514 587 548 508 531 578 280 403 540 274 777 524 526 535 
520 481 487 471 520 486 684 590 521 538 366 421 366 598 500 610 
500 299 427 412 675 597 597 556 1241 693 381 1194 500 693 500 500 
180 180 394 394 387 441 883 556 883 403 381 897 500 538 635 299 
238 623 794 612 636 404 635 556 795 527 578 481 417 795 627 409 
481 651 651 556 520 694 249 556 651 449 578 651 651 651 524 732 
732 732 732 732 732 1087 603 625 625 625 625 546 546 546 546 722 
797 798 798 798 798 798 481 798 737 737 737 737 635 521 443 512 
512 512 512 512 512 912 514 548 548 548 548 280 280 280 280 509 
524 526 526 526 526 526 481 526 520 520 520 520 521 535 431 ]
CorelDrawReencodeVect-ComicSansMS /_R13014111-ComicSansMS-1 /ComicSansMS Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
198.51250 272.09424 207.00142 282.56910 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.20 0.00 0.60 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
198.51250 272.09424 m
207.00142 282.56910 L
S

@rax %Note: Object
142.65071 216.81808 246.33354 307.44255 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
246.30293 216.97427 m
216.33307 237.61276 173.19487 232.64617 142.76806 216.81808 C
142.65071 272.25439 m
160.44321 277.69521 175.03852 280.48195 190.02047 282.56910 C
189.99411 307.44255 L
246.33354 273.20031 m
233.08724 278.76728 220.51956 280.53241 207.00142 282.56910 C
206.99603 307.44057 L
S

@rax %Note: Object
198.45354 282.47131 198.45468 284.17011 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.50 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
198.45411 282.47131 m
198.45411 284.17011 L
S

@rax %Note: Object
207.02381 245.22208 246.35679 256.02690 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.50 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
207.02381 256.02690 m
214.42337 255.73975 233.80129 251.31033 246.35679 245.22208 C
S

@rax %Note: Object
142.29978 244.05137 189.84331 255.44976 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.50 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
142.29978 244.05137 m
156.99345 249.58205 173.27424 254.68016 189.84331 255.44976 C
S

@rax %Note: Object
198.45354 258.92306 198.45468 282.47131 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
198.45411 258.92306 m
198.45411 282.47131 L
S

@rax %Note: Object
189.81439 255.45685 207.08731 258.92050 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 1.00 0.20 0.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
189.81439 255.45685 m
191.13477 255.55153 198.27666 257.40595 198.45439 258.92050 C
198.68797 257.38328 205.08917 256.14652 207.08731 256.02831 C
S

@rax %Note: Object
197.22614 270.80787 199.79858 273.38031 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
198.51250 270.80787 m
197.80214 270.80787 197.22614 271.38387 197.22614 272.09424 c
197.22614 272.80431 197.80214 273.38031 198.51250 273.38031 c
199.22258 273.38031 199.79858 272.80431 199.79858 272.09424 c
199.79858 271.38387 199.22258 270.80787 198.51250 270.80787 c
@c
F

@rax %Note: Object
205.71506 281.28274 208.28750 283.85518 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
207.00142 281.28274 m
206.29106 281.28274 205.71506 281.85874 205.71506 282.56910 c
205.71506 283.27918 206.29106 283.85518 207.00142 283.85518 c
207.71150 283.85518 208.28750 283.27918 208.28750 282.56910 c
208.28750 281.85874 207.71150 281.28274 207.00142 281.28274 c
@c
F

@rax %Note: Object
206.91524 282.55266 206.99943 292.24828 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
206.91524 282.55266 m
206.99943 292.24828 L
S

@rax %Note: Object
207.00142 281.20904 215.87669 283.25424 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
207.00142 283.25424 m
215.87669 281.20904 L
S

@rax %Note: Object
206.99943 281.20904 215.87669 292.24828 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.20 0.00 0.60 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
206.99943 292.24828 m
215.87669 281.20904 L
S

@rax 200.26290 267.95735 211.50879 271.22485 @E
[0.00028346 0.00000000 0.00000000 0.00028346 200.26289031 268.08206893] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 14111.00000 z
0 0 (skelPt) @t
T
@rax 196.36526 284.40879 205.69748 288.61937 @E
[0.00028346 0.00000000 0.00000000 0.00028346 196.36525266 285.54348562] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 14111.00000 z
0 0 (bc.pt) @t
T
@rax 207.74636 292.35997 237.65102 296.62923 @E
[0.00028346 0.00000000 0.00000000 0.00028346 207.74635461 293.49466643] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 14111.00000 z
0 0 (bc.LeftEndpoint) @t
T
@rax 216.47707 281.44658 248.02328 285.71584 @E
[0.00028346 0.00000000 0.00000000 0.00028346 216.47706295 282.58128100] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 14111.00000 z
0 0 (bc.RightEndpoint) @t
T
@rax 121.10910 197.89937 276.22630 205.27483 @E
[0.00028346 0.00000000 0.00000000 0.00028346 121.10909793 199.82663836] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 24694.00000 z
0 0 (Concave corner: green segments don) @t
/_R13014111-ComicSansMS-1 24694.00000 z
417721 0 (\041) @t
/_R13014111-ComicSansMS 24694.00000 z
422170 0 (t intersect) @t
T
@rax 312.55880 197.89937 454.31603 205.27483 @E
[0.00028346 0.00000000 0.00000000 0.00028346 312.55879172 199.82663836] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R13014111-ComicSansMS 24694.00000 z
0 0 (Convex corner:green segments do intersect) @t
T
@rax %Note: Object
340.98633 231.52139 410.49043 290.40463 @E
/$fm 0 def
0 J 0 j 2.613125929752795 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
340.98633 234.17660 m
340.98633 290.24844 L
410.49043 290.40463 L
410.49043 231.52139 L
S

@rax %Note: Object
375.53329 232.96054 375.53443 255.31682 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.50 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
375.53386 232.96054 m
375.53386 255.31682 L
S

@rax %Note: Object
360.15222 255.60000 375.96047 271.40825 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.50 null ] set_outline_color
[0.70710678 0.70710678 -0.70710678 0.70710678 0.00000000 0.00000000] 1 0.99978 0.99978 0.00000 @w
375.96047 255.60000 m
360.15222 271.40825 L
S

@rax %Note: Object
341.13458 278.75310 352.17439 290.24532 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.20 0.00 0.60 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
352.17439 290.24532 m
341.13458 278.75310 L
S

@rax %Note: Object
341.10340 290.07694 352.38813 290.24844 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
341.10340 290.07694 m
352.38813 290.24844 L
S

@rax %Note: Object
339.66425 288.81411 342.23669 291.38655 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
340.95061 288.81411 m
340.24025 288.81411 339.66425 289.39011 339.66425 290.10047 c
339.66425 290.81055 340.24025 291.38655 340.95061 291.38655 c
341.66069 291.38655 342.23669 290.81055 342.23669 290.10047 c
342.23669 289.39011 341.66069 288.81411 340.95061 288.81411 c
@c
F

@rax %Note: Object
362.97893 266.00939 365.55137 268.58183 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
364.26529 266.00939 m
363.55493 266.00939 362.97893 266.58539 362.97893 267.29575 c
362.97893 268.00583 363.55493 268.58183 364.26529 268.58183 c
364.97537 268.58183 365.55137 268.00583 365.55137 267.29575 c
365.55137 266.58539 364.97537 266.00939 364.26529 266.00939 c
@c
F

@rax %Note: Object
340.96309 278.75310 341.13458 290.03783 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[0.00000001 -1.00000000 1.00000000 0.00000001 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
340.96309 290.03783 m
341.13458 278.75310 L
S

@rax %Note: Object
340.96309 267.29575 364.26501 290.03783 @E
/$fm 0 def
0 J 0 j 2.613100054977593 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.20 0.00 0.60 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.49975 0.49975 0.00000 @w
340.96309 290.03783 m
364.26501 267.29575 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font ComicSansMS
%%EOF
