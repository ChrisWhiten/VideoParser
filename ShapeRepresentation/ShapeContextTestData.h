#include <Tools/Point.h>
#include <Tools/STLUtils.h>

struct TestPoint
{
	double x, y;
};

PointArray ModelFish()
{
	const int N = 98;

	TestPoint data[N] = {
		{0.2816, 0.5977},
		{0.3103, 0.6149},
		{0.3103, 0.5862},
		{0.3218, 0.5632},
		{0.3333, 0.5402},
		{0.3506, 0.6437},
		{0.3448, 0.6322},
		{0.3563, 0.5287},
		{0.3793, 0.6609},
		{0.3736, 0.5115},
		{0.3851, 0.6092},
		{0.3851, 0.5977},
		{0.3908, 0.4943},
		{0.4138, 0.6782},
		{0.4023, 0.6667},
		{0.4138, 0.4713},
		{0.4253, 0.4598},
		{0.4425, 0.7011},
		{0.4368, 0.4713},
		{0.4483, 0.454},
		{0.454, 0.7126},
		{0.4828, 0.7299},
		{0.4828, 0.4368},
		{0.5115, 0.4368},
		{0.5172, 0.4253},
		{0.5287, 0.7471},
		{0.546, 0.7644},
		{0.5517, 0.4195},
		{0.5862, 0.7931},
		{0.5862, 0.4138},
		{0.5977, 0.3908},
		{0.6092, 0.6839},
		{0.6149, 0.6552},
		{0.6149, 0.3793},
		{0.6322, 0.8161},
		{0.6207, 0.7241},
		{0.6322, 0.5747},
		{0.6322, 0.5517},
		{0.6322, 0.523},
		{0.6322, 0.3563},
		{0.6437, 0.8391},
		{0.6552, 0.7586},
		{0.6552, 0.6609},
		{0.6494, 0.5862},
		{0.6437, 0.5057},
		{0.6494, 0.4828},
		{0.6552, 0.3448},
		{0.6667, 0.8506},
		{0.6667, 0.454},
		{0.6667, 0.4253},
		{0.6667, 0.3218},
		{0.6782, 0.8736},
		{0.6897, 0.7931},
		{0.6897, 0.6897},
		{0.6782, 0.5747},
		{0.6782, 0.4138},
		{0.6782, 0.3793},
		{0.6897, 0.3448},
		{0.6897, 0.3103},
		{0.6954, 0.8908},
		{0.7011, 0.5517},
		{0.7011, 0.8161},
		{0.7011, 0.7126},
		{0.7356, 0.8966},
		{0.7241, 0.8621},
		{0.7126, 0.8391},
		{0.7241, 0.7241},
		{0.7126, 0.5402},
		{0.7241, 0.523},
		{0.7126, 0.2989},
		{0.7184, 0.2874},
		{0.7299, 0.931},
		{0.7586, 0.9655},
		{0.7471, 0.9368},
		{0.7471, 0.908},
		{0.7586, 0.7529},
		{0.7529, 0.4828},
		{0.7701, 0.9885},
		{0.7816, 1},
		{0.7874, 0.7701},
		{0.7874, 0.5862},
		{0.7816, 0.5517},
		{0.7816, 0.5172},
		{0.7931, 0.4828},
		{0.7931, 0.454},
		{0.7931, 0.6897},
		{0.7931, 0.6552},
		{0.7931, 0.6207},
		{0.8046, 0.7126},
		{0.8161, 0.7299},
		{0.8161, 0.4713},
		{0.8218, 0.4425},
		{0.8276, 0.4195},
		{0.8333, 0.7816},
		{0.8391, 0.7471},
		{0.8621, 0.7874},
		{0.8506, 0.7701},
		{0.8851, 0.7931}
	};

	PointArray pts(N);

	for (unsigned i = 0; i < N; ++i)
		pts[i].Set(data[i].x, data[i].y);

	return pts;
}

PointArray QueryFishWithOutliers()
{
	const int N = 196;

	TestPoint data[N] = {
		{0.3414, 0.5061},
		{0.3778, 0.5245},
		{0.3733, 0.5116},
		{0.3822, 0.503},
		{0.3899, 0.4923},
		{0.4265, 0.5436},
		{0.419, 0.5392},
		{0.4118, 0.49},
		{0.4583, 0.5504},
		{0.4242, 0.4803},
		{0.4583, 0.5352},
		{0.4565, 0.5307},
		{0.4348, 0.4687},
		{0.4931, 0.5529},
		{0.4815, 0.5514},
		{0.4459, 0.4501},
		{0.4501, 0.4395},
		{0.52, 0.5535},
		{0.4638, 0.449},
		{0.4642, 0.4326},
		{0.5301, 0.5535},
		{0.5537, 0.5512},
		{0.4772, 0.4114},
		{0.492, 0.4051},
		{0.4888, 0.393},
		{0.5876, 0.5456},
		{0.6004, 0.547},
		{0.5002, 0.3787},
		{0.6293, 0.5512},
		{0.5097, 0.3638},
		{0.5026, 0.3395},
		{0.6244, 0.5101},
		{0.6194, 0.4983},
		{0.5035, 0.3244},
		{0.6621, 0.5587},
		{0.639, 0.5227},
		{0.5977, 0.4593},
		{0.588, 0.4474},
		{0.5754, 0.4311},
		{0.5004, 0.2985},
		{0.6735, 0.5695},
		{0.6652, 0.5337},
		{0.6382, 0.4928},
		{0.6081, 0.4604},
		{0.5709, 0.4171},
		{0.5621, 0.4002},
		{0.5056, 0.283},
		{0.6913, 0.5767},
		{0.5545, 0.3749},
		{0.542, 0.3524},
		{0.5031, 0.2588},
		{0.7039, 0.5896},
		{0.6939, 0.5502},
		{0.6635, 0.5017},
		{0.6131, 0.4482},
		{0.5415, 0.3403},
		{0.5282, 0.3106},
		{0.5217, 0.2771},
		{0.5116, 0.2444},
		{0.72, 0.601},
		{0.611, 0.4313},
		{0.7069, 0.5625},
		{0.6771, 0.512},
		{0.7512, 0.61},
		{0.7342, 0.5894},
		{0.7204, 0.5756},
		{0.6934, 0.5177},
		{0.6101, 0.4226},
		{0.6069, 0.4103},
		{0.5218, 0.2308},
		{0.5227, 0.2194},
		{0.7551, 0.6284},
		{0.7862, 0.6524},
		{0.77, 0.6343},
		{0.7628, 0.6182},
		{0.7242, 0.5345},
		{0.6027, 0.3795},
		{0.8013, 0.6672},
		{0.8136, 0.6754},
		{0.7494, 0.5466},
		{0.668, 0.4425},
		{0.6485, 0.4218},
		{0.633, 0.3998},
		{0.6257, 0.3751},
		{0.6149, 0.3543},
		{0.7199, 0.5019},
		{0.7041, 0.4824},
		{0.6878, 0.4626},
		{0.7375, 0.5155},
		{0.7528, 0.5261},
		{0.6367, 0.3649},
		{0.631, 0.3431},
		{0.6285, 0.3248},
		{0.7865, 0.5574},
		{0.7766, 0.5377},
		{0.8105, 0.563},
		{0.7948, 0.5521},
		{0.8309, 0.5678},
		{1.0154, 0.5558},
		{0.4105, 0.5805},
		{0.8404, 0.1959},
		{0.2539, 0.3285},
		{0.3125, 0.0642},
		{0.7787, 0.1876},
		{0.9957, 0.2992},
		{0.9763, 0.2587},
		{0.1892, 0.2748},
		{0.1124, 0.8716},
		{0.7891, 0.2556},
		{0.1943, 0.4205},
		{0.4798, 0.256},
		{0.2048, 0.0056},
		{0.5723, 0.3929},
		{0.1992, 0.8909},
		{0.3544, 0.0106},
		{0.62, 0.7778},
		{0.9197, 0.4148},
		{0.6903, 0.3256},
		{0.7681, 0.1357},
		{0.887, 0.5075},
		{0.6101, 0.902},
		{0.2588, -0.0173},
		{0.5675, 0.0393},
		{0.5198, -0.0068},
		{0.2522, 0.6145},
		{0.536, 0.6627},
		{0.272, 0.3445},
		{0.4726, 0.3704},
		{0.3851, 0.7444},
		{1.0256, 0.2339},
		{0.3081, 0.7289},
		{0.8266, 0.179},
		{0.7421, 0.5637},
		{0.2166, 0.4783},
		{0.5252, 0.2842},
		{0.9737, 0.6519},
		{0.1223, 0.1874},
		{1.0426, 0.9385},
		{0.1639, 0.4575},
		{0.7076, 0.0581},
		{0.3937, 0.1721},
		{0.3249, 0.1593},
		{0.5043, 0.2293},
		{0.3994, 0.7697},
		{0.1064, 0.4293},
		{0.3343, 0.7948},
		{0.9445, 0.5987},
		{0.1919, 0.5265},
		{0.7087, 0.1888},
		{1.0921, 0.4632},
		{1.0599, 0.4684},
		{0.8801, 0.9244},
		{0.5971, 0.4624},
		{0.6733, 0.7901},
		{0.1638, 0.9459},
		{0.9468, 0.8053},
		{0.387, 0.9201},
		{0.137, 0.605},
		{0.6833, 0.747},
		{0.5599, 0.781},
		{0.6851, 0.2804},
		{0.4194, 0.9072},
		{0.123, 0.6109},
		{0.631, 0.4075},
		{1.0192, 0.5114},
		{0.7703, 0.3487},
		{0.5697, 0.9743},
		{1.0629, 0.4852},
		{0.2846, 0.5312},
		{0.8508, 0.461},
		{0.3846, 0.6024},
		{0.3774, 0.7524},
		{0.7392, 0.4898},
		{0.7814, 0.6175},
		{0.878, 0.1608},
		{0.8217, 0.1327},
		{0.513, 0.2251},
		{0.2461, 0.0294},
		{1.0176, 0.2832},
		{0.9385, 0.3397},
		{0.5662, 0.5029},
		{0.9081, 0.3095},
		{0.8807, 0.9481},
		{0.9958, 0.8713},
		{0.8526, 0.1352},
		{0.138, 0.3235},
		{0.9761, 0.1609},
		{1.0425, 0.77},
		{0.793, 0.42},
		{0.1932, 0.1951},
		{0.1569, 0.5243},
		{0.9682, 0.7823},
		{0.4745, 0.9144},
		{0.4031, 0.8061},
		{0.1281, 0.1231},
		{0.6976, 0.9286}
	};

	PointArray pts(N);

	for (unsigned i = 0; i < N; ++i)
		pts[i].Set(data[i].x, data[i].y);

	return pts;
}
